AWSTemplateFormatVersion: '2010-09-09'
Description: 'Template to enable Amazon Bedrock access for Claude v2.1, create a private S3 bucket, and an Amazon Location Service Place Index using Esri'

Parameters:
  AWSRegion:
    Type: String
    Description: The AWS Region to deploy resources

Resources:
  BedrockAccess:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: BedrockAccessPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'bedrock:InvokeModel'
              - 'bedrock:InvokeModelWithResponseStream'
            Resource:
              - !Sub 'arn:aws:bedrock:${AWSRegion}::foundation-model/anthropic.claude-v2-1'
      Roles:
        - !Ref BedrockAccessRole

  BedrockAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
            Action: sts:AssumeRole

  PrivateS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'customer-agent-with-camara-api-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref LoggingBucket
        LogFilePrefix: !Sub 'customer-agent-with-camara-api-${AWS::AccountId}/logs'

  PrivateS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PrivateS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt BedrockAccessRole.Arn
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:DeleteObject'
            Resource:
              - !Sub 'arn:aws:s3:::${PrivateS3Bucket}/*'

  LoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'customer-agent-with-camara-api-logs-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  LoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LoggingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: S3ServerAccessLogsPolicy
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action:
              - 's3:PutObject'
            Resource: !Sub 'arn:aws:s3:::customer-agent-with-camara-api-logs-${AWS::AccountId}/*'
            Condition:
              ArnLike:
                'aws:SourceArn': !Sub 'arn:aws:s3:::customer-agent-with-camara-api-${AWS::AccountId}'
              StringEquals:
                'aws:SourceAccount': !Ref 'AWS::AccountId'

  PlaceIndex:
    Type: AWS::Location::PlaceIndex
    Properties:
      DataSource: Esri
      IndexName: PlaceIndex_for_my_agent
      PricingPlan: RequestBasedUsage

Outputs:
  S3BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref PrivateS3Bucket
  PlaceIndexName:
    Description: Name of the created Place Index
    Value: !Ref PlaceIndex
